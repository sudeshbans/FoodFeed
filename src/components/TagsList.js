import React from 'react';
import {
  View,
  TextInput,
  StyleSheet,
  Dimensions,
  ListView,
  StatusBar,
  TouchableOpacity
} from 'react-native';
import {EvilIcons} from '@exponent/vector-icons';
import CustomText from './CustomText';


const WindowWidth = Dimensions.get('window').width;
const WindowHeight = Dimensions.get('window').height;

const styles = StyleSheet.create({
  viewContainer: {
    backgroundColor: '#e5e5e5',
    width: WindowWidth,
    height: WindowHeight
  },
  textInputContainer: {
    marginTop: 20,
    marginLeft: 20,
    marginRight: 20,
    flexDirection: 'row',
    justifyContent: 'space-between'
  },
  done: {
    marginTop: 10,
    fontSize: 15,
    color: '#476fcc'
  },
  textInputStlye: {
    height: 40,
    width: 250,
    paddingRight: 10,
    borderColor: '#476fcc'
  },
  listContainer: {
    marginLeft: 20,
    marginRight: 20,
    marginTop: 5,
    paddingBottom: 5
  },
  tagList: {
    color: '#476fcc'
  },
  addedTextContainer: {
    flexDirection: 'row',
    flexWrap: 'wrap',
    top: 0,
    bottom: 0,
    left: 0,
    right: 0,
    height: 40,
    marginLeft: 20,
    position: 'absolute'
  },
  listMain: {
    backgroundColor: '#dddddd',
    marginLeft: 20,
    marginRight: 20,
    paddingBottom: 0
  },
  pageHeader: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    paddingTop: 15,
    paddingBottom: 15,
    backgroundColor: '#254d8e'
  },
  addedTextViewContainer: {
    borderWidth: 1,
    flexDirection: 'row',
    alignItems: 'center',
    padding: 10,
    borderRadius: 10,
    margin: 5,
    justifyContent: 'center',
    borderColor: '#476fcc'
  },
  listMainPadding: {
    paddingBottom: 50
  },
  addedTextViewContainerHide: {
    borderColor: 'white'
  },
  iconHide: {
    color: 'white'
  },
  closeIcon: {
    color: '#032a68',
    paddingLeft: 3,
    paddingTop: 3,
    backgroundColor: 'transparent'
  },
  addedTextHide: {
    color: 'white'
  },
  addedText: {
    color: '#476fcc'
  }
});

const tagsList = ['indian', 'chinese', 'asian', 'american', 'nepali'];
const ds = new ListView.DataSource({rowHasChanged: () => true});

class TagsList extends React.Component {
  constructor() {
    super();
    this.state = {
      refreshing: false,
      addToList: [],
      autoGeneratedTags: [],
      tag: null
    };
  }

  componentWillMount() {
    this.setState({
      addToList: this.props.tagsList
    });
  }

  handleKeyDown = (e) => {
    if (e.nativeEvent.key === 'Enter') {
      this.addToList(this.state.tag);
    }
  }

  addToList = (data) => {
    this.setState({
      addToList: this.state.addToList.concat(data),
      autoGeneratedTags: [],
      tag: ''
    });
  }

  remove = (data) => {
    const addToList = this.state.addToList;
    addToList.splice(data, 1);

    this.setState({
      addToList
    });
  }

  searchTagsList = (typedTag) => {
    if (!typedTag) {
      this.setState({
        tag: '',
        autoGeneratedTags: []
      });
      return;
    }

    const autoGeneratedTags = tagsList.filter(value =>
       value.toLowerCase().indexOf(typedTag.toLowerCase()) > -1);

    this.setState({
      autoGeneratedTags,
      tag: typedTag
    });
  };

  render() {
    let addedTextViewContainer = styles.addedTextViewContainer;
    let addedText = styles.addedText;
    let closeIcon = styles.closeIcon;
    let listMainPadding = {};

    if (this.state.autoGeneratedTags.length) {
      addedTextViewContainer = styles.addedTextViewContainerHide;
      addedText = styles.addedTextHide;
      closeIcon = styles.iconHide;
      listMainPadding = styles.listMainPadding;
    }

    return (
      <View style={[styles.container]}>
        <StatusBar hidden />
        <View style={styles.pageHeader}>
          <TouchableOpacity onPress={() => this.props.cancel()} >
            <CustomText
              style={{
                color: '#f7f7f7',
                marginLeft: 10
              }}>
              Cancel
            </CustomText>
          </TouchableOpacity>
          <CustomText
            style={{
              color: '#f7f7f7'
            }}>
            Tags
          </CustomText>
          <TouchableOpacity
            onPress={() => this.props.done(this.state.addToList)} >
            <CustomText
              style={{
                color: '#f7f7f7',
                marginRight: 10
              }}>
           Done ({this.state.addToList.length})
           </CustomText>
          </TouchableOpacity>
        </View>
        <View style={[styles.textInputContainer]}>
          <TextInput
            placeholder="Create Tags for your delish..."
            autoFocus
            value={this.state.tag}
            onChangeText={this.searchTagsList}
            onKeyPress={this.handleKeyDown}
            style={styles.textInputStlye}
            />
          { this.state.tag ?
            <TouchableOpacity onPress={() => this.addToList(this.state.tag, true)} >
              <CustomText style={styles.done}>
              Add
            </CustomText>
            </TouchableOpacity> : null
          }
        </View>
        <View>
          <View style={styles.addedTextContainer}>
            {
              this.state.addToList.map((data, key) => (
                <TouchableOpacity
                  key={key}
                  onPress={() => this.remove(key)} >
                  <View
                    style={addedTextViewContainer}>
                    <CustomText style={addedText}>
                      {data}
                    </CustomText>
                    <EvilIcons
                      name="close-o"
                      style={closeIcon}
                      size={15} />
                  </View>
                </TouchableOpacity>
              ))
            }
          </View>
          <View style={[styles.listMain, listMainPadding]}>
            <ListView
              enableEmptySections
              dataSource={ds.cloneWithRows(this.state.autoGeneratedTags)}
              renderRow={data => (
                <TouchableOpacity onPress={() => this.addToList(data)}>
                  <View style={styles.listContainer}>
                    <CustomText style={styles.tagList}>
                      {data}
                    </CustomText>
                  </View>
                </TouchableOpacity>
              )} />
          </View>
        </View>
      </View>
    );
  }
}

export default TagsList;
